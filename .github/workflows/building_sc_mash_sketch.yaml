name: Build a mash sketch database of Saccharomyces cerevisiae (and outgroup) genomes

on:
  workflow_dispatch:
    inputs:
      refseq_version:
        description: 'Enter a version tag for this build with no spaces (e.g. v1.0, 2025.06, etc.)'
        required: true

jobs:
  # --------------------------------------------------------------------------
  # JOB 1: Combine a manual list with NCBI's list and de-duplicate
  # --------------------------------------------------------------------------
  list_genomes:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Download NCBI Tools
        run: |
          wget -q https://ftp.ncbi.nlm.nih.gov/pub/datasets/command-line/v2/linux-amd64/datasets
          chmod +x datasets
          sudo apt-get update && sudo apt-get install -y jq

      - name: Create Master Genome List
        run: |
          export PATH=$(pwd):$PATH
          MANUAL_LIST="sc_ids.tsv"
          FINAL_IDS_FILE="ids.tsv"

          # This check is now more flexible.
          if [ ! -f "$MANUAL_LIST" ]; then
            echo "WARNING: Manual list '$MANUAL_LIST' not found. Proceeding with NCBI list only."
            # Create an empty file so the 'cat' command below doesn't fail.
            touch "$MANUAL_LIST"
          fi
          
          echo "Fetching NCBI list for S. cerevisiae (taxon 4932)..."
          # NOTE: Removed the --reference flag to get ALL genomes
          ./datasets summary genome taxon 4932 --as-json-lines | \
          jq -r '[.accession, .organism.organism_name] | @tsv' > ncbi_list.tmp
          
          echo "Combining lists and removing duplicates..."
          cat "$MANUAL_LIST" ncbi_list.tmp | sort -u -k1,1 > "$FINAL_IDS_FILE"
          rm ncbi_list.tmp

      - name: Check Final List Size
        run: |
          count=$(wc -l < ids.tsv)
          echo "Created a final list with ${count} unique genomes."

      - name: Split id list for parallel jobs
        run: |
          split -n l/10 ids.tsv -d --additional-suffix=.tsv x

      - name: Upload list chunks for next job
        uses: actions/upload-artifact@v4
        with:
          name: genome-chunks
          path: x*.tsv
          overwrite: true

      - name: Upload full id list
        uses: actions/upload-artifact@v4
        with:
          name: final-id-list
          path: ids.tsv
          overwrite: true

  # --------------------------------------------------------------------------
  # JOB 2: Create sketches for each chunk in parallel
  # --------------------------------------------------------------------------
  create_sketches:
    needs: list_genomes
    runs-on: ubuntu-latest
    timeout-minutes: 720 # 12 hours
    strategy:
      fail-fast: false
      matrix:
        chunk: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    steps:
      - name: Download Tools
        run: |
          wget -q https://ftp.ncbi.nlm.nih.gov/pub/datasets/command-line/v2/linux-amd64/datasets
          chmod +x datasets
          wget -q https://github.com/marbl/Mash/releases/download/v2.3/mash-Linux64-v2.3.tar
          tar -xvf mash-Linux64-v2.3.tar && mv mash-Linux64-v2.3/mash .

      - name: Download genome chunk artifact
        uses: actions/download-artifact@v4
        with:
          name: genome-chunks
      
      - name: Download, Unzip, and Sketch Genomes (Chunk ${{ matrix.chunk }})
        run: |
          export PATH=$(pwd):$PATH
          INPUT_FILE=$(printf "x%02d.tsv" ${{ matrix.chunk }})
          OUTPUT_SKETCH="chunk_${{ matrix.chunk }}.msh"

          echo "Processing ${INPUT_FILE} one genome at a time..."
          
          while IFS=$'\t' read -r accession organism_name; do
            if [ -z "$accession" ]; then continue; fi

            echo "--- Processing $accession ---"
            mkdir -p temp_genome_files
            
            success=false
            for i in 1 2 3; do
              if ./datasets download genome accession "$accession" --no-progressbar --filename "temp_genome_files/genome.zip"; then
                success=true
                break
              fi
              echo "Download attempt $i for $accession failed. Retrying in 15s..."
              sleep 15
            done

            if ! $success; then
              echo "ERROR: Failed to download $accession after 3 attempts. Skipping."
              rm -rf temp_genome_files
              continue
            fi

            unzip -q -o temp_genome_files/genome.zip -d temp_genome_files/unzipped
            fasta_file=$(find temp_genome_files/unzipped -name "*.fna")

            if [ -z "$fasta_file" ] || [ ! -f "$fasta_file" ]; then
                echo "ERROR: Could not find .fna file for $accession. Skipping."
                rm -rf temp_genome_files
                continue
            fi
            
            ./mash sketch -k 21 -s 1000 -p 8 -o temp_genome_files/single.msh "$fasta_file"
            
            if [ ! -f "$OUTPUT_SKETCH" ]; then
              mv temp_genome_files/single.msh "$OUTPUT_SKETCH"
            else
              mv "$OUTPUT_SKETCH" temp_chunk.msh
              ./mash paste "$OUTPUT_SKETCH" temp_chunk.msh temp_genome_files/single.msh
              rm temp_chunk.msh
            fi
            
            rm -rf temp_genome_files
            
          done < "$INPUT_FILE"

      - name: Upload partial sketch artifact
        uses: actions/upload-artifact@v4
        with:
          name: partial-sketch-${{ matrix.chunk }}
          path: chunk_${{ matrix.chunk }}.msh
          overwrite: true

  # --------------------------------------------------------------------------
  # JOB 3: Combine all partial sketches (Corrected Variable Scope)
  # --------------------------------------------------------------------------
  combine_sketches:
    if: success() || failure()
    needs: create_sketches
    runs-on: ubuntu-latest
    steps:
      - name: Download Mash
        run: |
          wget -q https://github.com/marbl/Mash/releases/download/v2.3/mash-Linux64-v2.3.tar
          tar -xvf mash-Linux64-v2.3.tar && mv mash-Linux64-v2.3/mash .
      
      - name: Download all created sketch artifacts
        uses: actions/download-artifact@v4
        with:
          path: partial_sketches/
      
      - name: Download final ID list
        uses: actions/download-artifact@v4
        with:
          name: final-id-list
      
      - name: Combine, Compress, and Prepare for Release
        run: |
          export PATH=$(pwd):$PATH
          FINAL_SKETCH_NAME="SCerevisiae_RefSeq_${{ github.event.inputs.refseq_version }}.msh"
          
          echo "Pasting all partial sketches into ${FINAL_SKETCH_NAME}..."
          if [ -z "$(ls -A partial_sketches)" ]; then
            echo "No sketches were downloaded. Cannot create final database."
            exit 1
          fi
          
          # Combine all the partial sketches
          ./mash paste "$FINAL_SKETCH_NAME" $(find partial_sketches -name "*.msh")
          
          # Now, compress the file that was just created
          echo "Compressing the final sketch..."
          gzip "$FINAL_SKETCH_NAME"

      - name: Create Release and Upload Final Sketch
        uses: softprops/action-gh-release@v2
        with:
          name: S. cerevisiae RefSeq Database ${{ github.event.inputs.refseq_version }}
          tag_name: ${{ github.event.inputs.refseq_version }}
          files: |
            SCerevisiae_RefSeq_${{ github.event.inputs.refseq_version }}.msh.gz
            ids.tsv
